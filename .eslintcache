[{"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\index.js":"1","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\App.js":"2","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\configuteStore.js":"3","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Login.js":"4","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\common\\protectedRoute.js":"5","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Dashboard.js":"6","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Signup.js":"7","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Header.js":"8","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\NotFound.js":"9","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Sidebar.js":"10","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Settings.js":"11","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\user.js":"12","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\AddNewFollow.js":"13","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Account.js":"14","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\common\\protectedRouteAdmin.js":"15","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Manage.js":"16","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Recovery.js":"17","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\reducer.js":"18","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\admin\\Admin.js":"19","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\middleware\\logger.js":"20","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\middleware\\api.js":"21","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\message.js":"22","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\allegro.js":"23","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\MonitorHistory.js":"24","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\api.js":"25","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\monitor.js":"26","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\ManageMonitor.js":"27","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\admin.js":"28","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\services\\userServices.js":"29","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\ExpandedTableAdmin.js":"30","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\services\\httpService.js":"31","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\MonitorsHistory.js":"32","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\MonitorsHistoryItem.js":"33","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\ebay.js":"34"},{"size":478,"mtime":1609435517987,"results":"35","hashOfConfig":"36"},{"size":5397,"mtime":1609764961355,"results":"37","hashOfConfig":"36"},{"size":357,"mtime":1609680852904,"results":"38","hashOfConfig":"36"},{"size":3992,"mtime":1609764860277,"results":"39","hashOfConfig":"36"},{"size":630,"mtime":1607946855107,"results":"40","hashOfConfig":"36"},{"size":6077,"mtime":1609607952077,"results":"41","hashOfConfig":"36"},{"size":6568,"mtime":1609713216541,"results":"42","hashOfConfig":"36"},{"size":297,"mtime":1609680791511,"results":"43","hashOfConfig":"36"},{"size":119,"mtime":1607946855105,"results":"44","hashOfConfig":"36"},{"size":6879,"mtime":1609764395266,"results":"45","hashOfConfig":"36"},{"size":6992,"mtime":1609693768387,"results":"46","hashOfConfig":"36"},{"size":4450,"mtime":1609764371029,"results":"47","hashOfConfig":"36"},{"size":21849,"mtime":1610123337757,"results":"48","hashOfConfig":"36"},{"size":12932,"mtime":1609764431930,"results":"49","hashOfConfig":"36"},{"size":821,"mtime":1607946855107,"results":"50","hashOfConfig":"36"},{"size":3702,"mtime":1609683201254,"results":"51","hashOfConfig":"36"},{"size":6305,"mtime":1608305278369,"results":"52","hashOfConfig":"36"},{"size":658,"mtime":1609764350199,"results":"53","hashOfConfig":"36"},{"size":4664,"mtime":1609680862154,"results":"54","hashOfConfig":"36"},{"size":138,"mtime":1608305278373,"results":"55","hashOfConfig":"36"},{"size":1743,"mtime":1609275501853,"results":"56","hashOfConfig":"36"},{"size":625,"mtime":1608305278371,"results":"57","hashOfConfig":"36"},{"size":3874,"mtime":1609689957398,"results":"58","hashOfConfig":"36"},{"size":1445,"mtime":1609349597363,"results":"59","hashOfConfig":"36"},{"size":238,"mtime":1607946855108,"results":"60","hashOfConfig":"36"},{"size":5952,"mtime":1609715150480,"results":"61","hashOfConfig":"36"},{"size":2308,"mtime":1609682850281,"results":"62","hashOfConfig":"36"},{"size":1188,"mtime":1609276388992,"results":"63","hashOfConfig":"36"},{"size":421,"mtime":1609680844654,"results":"64","hashOfConfig":"36"},{"size":3052,"mtime":1609275614036,"results":"65","hashOfConfig":"36"},{"size":568,"mtime":1609680842020,"results":"66","hashOfConfig":"36"},{"size":3788,"mtime":1609684533468,"results":"67","hashOfConfig":"36"},{"size":1631,"mtime":1609716456270,"results":"68","hashOfConfig":"36"},{"size":2221,"mtime":1609690009847,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1f8mp6i",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\index.js",[],["144","145"],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\App.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\configuteStore.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Login.js",["146"],"import React from \"react\";\r\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\r\nimport { loginUser } from \"../store/user\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Input, Form, Button, Checkbox, Row, Col, Image, message } from \"antd\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport LogoImg from \"./common/logo.png\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"token\");\r\n  const logged = useSelector((state) => state.users.logged, shallowEqual);\r\n  const loading = useSelector((state) => state.users.loading, shallowEqual);\r\n\r\n  const login = (values) => {\r\n    dispatch(\r\n      loginUser({\r\n        email: values.email,\r\n        password: values.password,\r\n      })\r\n    );\r\n  };\r\n  if (token || logged) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row justify=\"center\" align=\"middle\">\r\n        <Col justify=\"center\" style={{ width: \"45%\" }}>\r\n          <Image src={LogoImg} />\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\" align=\"middle\">\r\n        <Col span={6}>\r\n          <h1\r\n            style={{\r\n              width: \"100%\",\r\n              borderRadius: \"25px\",\r\n              textAlign: \"center\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Logowanie\r\n          </h1>\r\n          <Form\r\n            name=\"login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: false,\r\n            }}\r\n            onFinish={login}\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Proszę podać adres email!\",\r\n                },\r\n                {\r\n                  type: \"email\",\r\n                  message: \"Wprowadzono błędny adres email\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Email\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Proszę podać hasło!\",\r\n                },\r\n                {\r\n                  min: 8,\r\n                  message: \"Co najmniej 8 znaków\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Hasło\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Form.Item\r\n                align=\"space-between\"\r\n                name=\"remember\"\r\n                valuePropName=\"checked\"\r\n                noStyle\r\n              >\r\n                <Checkbox>Zapamiętaj mnie</Checkbox>\r\n              </Form.Item>\r\n            </Form.Item>\r\n            <Row justify=\"center\" align=\"middle\" gutter={6}>\r\n              <Col>\r\n                <Form.Item style={{ margin: 0 }}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    shape=\"round\"\r\n                    className=\"login-form-button\"\r\n                    loading={loading}\r\n                  >\r\n                    Zaloguj\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col>\r\n                <Button type=\"primary\" shape=\"round\">\r\n                  <Link to=\"/signup\">Zarejestruj się</Link>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\" style={{ paddingTop: 20 }}>\r\n        <Col>\r\n          <Link to=\"/recovery\">Zapomniałem hasła</Link>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\common\\protectedRoute.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Dashboard.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Signup.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Header.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\NotFound.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Sidebar.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Settings.js",["147","148","149"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  deleteAllegroToken,\r\n  loadAllegroUserData,\r\n  registerAllegroAccount,\r\n} from \"../store/allegro\";\r\nimport { Button, Col, Row, Spin } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport AllegroImg from \"./common/allegro.svg\";\r\nimport EbayImg from \"./common/ebay.png\";\r\nimport {\r\n  deleteEbayToken,\r\n  loadEbayUserData,\r\n  registerEbayAccount,\r\n} from \"../store/ebay\";\r\n\r\nconst Settings = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const isAllegroLogged = useSelector(\r\n    (state) => state.allegro.isAllegroRegistered\r\n  );\r\n  const isEbayLogged = useSelector((state) => state.ebay.isEbayRegistered);\r\n  const allegroUser = useSelector((state) => state.allegro.user);\r\n  const loaded = useSelector((state) => state.allegro.loaded);\r\n\r\n  if (query.get(\"code\")) {\r\n    console.log(query.get(\"code\"));\r\n    if (document.referrer == \"https://auth.ebay.com/\") {\r\n      dispatch(registerEbayAccount(token, { code: query.get(\"code\") }));\r\n    } else {\r\n      dispatch(registerAllegroAccount(token, { code: query.get(\"code\") }));\r\n    }\r\n    history.push(\"/settings\");\r\n  }\r\n\r\n  const registerAllegro = () => {\r\n    window.location = process.env.REACT_APP_ALLEGRO_REGISTER;\r\n  };\r\n\r\n  const registerEbay = () => {\r\n    window.location = process.env.REACT_APP_EBAY_REGISTER;\r\n  };\r\n\r\n  const deleteAllegro = () => {\r\n    dispatch(deleteAllegroToken());\r\n  };\r\n\r\n  const deleteEbay = () => {\r\n    dispatch(deleteEbayToken());\r\n  };\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    if (loaded === false) {\r\n      dispatch(loadAllegroUserData());\r\n      //dispatch(loadEbayUserData());\r\n    }\r\n  }, [loaded]);\r\n\r\n  if (!loaded)\r\n    return (\r\n      <React.Fragment>\r\n        <Row\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          style={{ height: \"100%\", width: \"100%\" }}\r\n        >\r\n          <Col span={2}>\r\n            <Spin tip={\"Loading...\"} />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row\r\n        justify=\"start\"\r\n        align=\"middle\"\r\n        style={{ marginLeft: \"10%\", marginBottom: \"2%\" }}\r\n      >\r\n        <Col span={24}>\r\n          <Title level={2} style={{ color: \"#1d2a64\" }}>\r\n            Ustawienia\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"space-around\" align=\"middle\">\r\n        <Col span={9}>\r\n          <ItemCard>\r\n            <Row justify=\"center\" align=\"middle\">\r\n              <Col span={24}>\r\n                <img width=\"300px\" alt=\"Zdjęcie Allego\" src={AllegroImg} />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ paddingTop: \"40px\" }}>\r\n              <Col span={24} style={{ fontWeight: \"600\", color: \"#1d2a64\" }}>\r\n                Status:{\" \"}\r\n                {isAllegroLogged ? \"Konto powiązane\" : \"Konto niepowiązane\"}\r\n              </Col>\r\n              {isAllegroLogged ? (\r\n                <React.Fragment>\r\n                  <Col\r\n                    span={24}\r\n                    style={{\r\n                      fontWeight: \"600\",\r\n                      paddingTop: \"10px\",\r\n                      color: \"#1d2a64\",\r\n                    }}\r\n                  >\r\n                    ID Konta: {isAllegroLogged ? allegroUser.id : null}\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    style={{\r\n                      fontWeight: \"600\",\r\n                      paddingTop: \"10px\",\r\n                      color: \"#1d2a64\",\r\n                    }}\r\n                  >\r\n                    Login: {isAllegroLogged ? allegroUser.login : null}\r\n                  </Col>\r\n                  <Col\r\n                    span={24}\r\n                    style={{\r\n                      fontWeight: \"600\",\r\n                      paddingTop: \"10px\",\r\n                      color: \"#1d2a64\",\r\n                    }}\r\n                  >\r\n                    Powiązany Email:{\" \"}\r\n                    {isAllegroLogged ? allegroUser.email : null}\r\n                  </Col>\r\n                </React.Fragment>\r\n              ) : null}\r\n\r\n              <Col span={24}>\r\n                {isAllegroLogged ? (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    style={{ marginTop: \"50px\" }}\r\n                    onClick={deleteAllegro}\r\n                    danger\r\n                  >\r\n                    Usuń powiązanie\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    style={{ marginTop: \"50px\" }}\r\n                    onClick={registerAllegro}\r\n                  >\r\n                    Dodaj swoje konto Allegro\r\n                  </Button>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </ItemCard>\r\n        </Col>\r\n        <Col span={9}>\r\n          <ItemCard>\r\n            <Row justify=\"center\" align=\"middle\">\r\n              <Col span={24}>\r\n                <img width=\"230px\" alt=\"Zdjęcie eBay\" src={EbayImg} />\r\n              </Col>\r\n            </Row>\r\n            <Row\r\n              style={{\r\n                paddingTop: \"40px\",\r\n                fontWeight: \"600\",\r\n                color: \"#1d2a64\",\r\n              }}\r\n            >\r\n              <Col span={24}>\r\n                {isEbayLogged ? \"Konto powiązane\" : \"Konto niepowiązane\"}\r\n              </Col>\r\n              <Col span={24}>\r\n                {isEbayLogged ? (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    style={{ marginTop: \"50px\" }}\r\n                    onClick={deleteEbay}\r\n                    danger\r\n                  >\r\n                    Usuń powiązanie\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    style={{ marginTop: \"50px\" }}\r\n                    onClick={registerEbay}\r\n                    disabled\r\n                  >\r\n                    Dodaj swoje konto EBay\r\n                  </Button>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </ItemCard>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n\r\nconst ItemCard = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  text-align: center;\r\n  border-radius: 25px;\r\n  padding-top: 30px;\r\n  padding-bottom: 30px;\r\n  background-color: #f7f9fb;\r\n  border: 1px solid #e9eff8;\r\n  box-shadow: 0 0 3px rgba(33, 33, 33, 0.2);\r\n`;\r\n","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\user.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\AddNewFollow.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Account.js",["150"],"import {\r\n  Avatar,\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Row,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  message,\r\n} from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport React, { useState } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport HackerImage from \"./common/hacker.png\";\r\nimport { logoutUser, userDataChange, userDelete } from \"../store/user\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CloudUploadOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst Account = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const emailAdress = useSelector(\r\n    (state) => state.users.user.email,\r\n    shallowEqual\r\n  );\r\n  const phone = useSelector((state) => state.users.user.phone, shallowEqual);\r\n  const [visible, setVisible] = useState(false);\r\n  const loading = useSelector((state) => state.users.loading);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const removeAccount = () => {\r\n    setVisible(false);\r\n    dispatch(userDelete(token));\r\n    localStorage.removeItem(\"token\");\r\n    dispatch({ type: \"userLogout\" });\r\n    history.push(\"/login?logout=true\");\r\n  };\r\n  const hideModal = () => {\r\n    setVisible(false);\r\n  };\r\n  const changeEmail = (values) => {\r\n    if (values.email !== emailAdress) {\r\n      dispatch(userDataChange({ email: values.email }, token));\r\n    } else {\r\n      message.warning(\"Podano ten sam adres Email\", 3);\r\n    }\r\n  };\r\n\r\n  const changePassword = (values) => {\r\n    dispatch(\r\n      userDataChange(\r\n        { oldPassword: values.oldPassword, newPassword: values.newPassword },\r\n        token\r\n      )\r\n    );\r\n  };\r\n\r\n  const changePhone = (values) => {\r\n    dispatch(userDataChange({ phone: values.phone }, token));\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 7 },\r\n    wrapperCol: { span: 10 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 0, span: 0 },\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row justify=\"start\" align=\"top\" style={{ marginLeft: \"10%\" }}>\r\n        <Col>\r\n          <Title level={2}>Mój Profil</Title>\r\n        </Col>\r\n      </Row>\r\n      <Row\r\n        justify=\"center\"\r\n        align=\"middle\"\r\n        style={{ paddingTop: 30 }}\r\n        gutter={[0, 10]}\r\n      >\r\n        <Col span={22}>\r\n          <AccountCard>\r\n            <Content style={{ overflow: \"auto\" }}>\r\n              <Row>\r\n                <Col\r\n                  span={24}\r\n                  style={{\r\n                    padding: \"20px 0px 50px 0px\",\r\n                    marginBottom: \"-100px\",\r\n                  }}\r\n                >\r\n                  <Row justify=\"center\" align=\"middle\">\r\n                    <Col span={24}>\r\n                      <Divider>Avatar</Divider>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row\r\n                    justify=\"center\"\r\n                    align=\"middle\"\r\n                    style={{ paddingLeft: 30 }}\r\n                  >\r\n                    <Col>\r\n                      <Avatar size={70} src={HackerImage} />\r\n                      <Button\r\n                        icon={<CloudUploadOutlined />}\r\n                        shape=\"round\"\r\n                        style={{ marginLeft: 30 }}\r\n                      >\r\n                        Dodaj Nowy\r\n                      </Button>\r\n                      <Button\r\n                        type=\"default\"\r\n                        shape=\"round\"\r\n                        style={{ marginLeft: 15 }}\r\n                        danger\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        Usuń\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Divider>Zmiana Email</Divider>\r\n                  <Row\r\n                    justify=\"center\"\r\n                    align=\"middle\"\r\n                    style={{ paddingLeft: 30 }}\r\n                  >\r\n                    <Col span={12}>\r\n                      <Form\r\n                        {...layout}\r\n                        name=\"changeEmail\"\r\n                        initialValues={{ email: emailAdress }}\r\n                        onFinish={changeEmail}\r\n                      >\r\n                        <Form.Item\r\n                          label=\"Email\"\r\n                          name=\"email\"\r\n                          rules={[\r\n                            {\r\n                              type: \"email\",\r\n                              message: \"Wprowadź poprawny adres email\",\r\n                            },\r\n                            {\r\n                              required: true,\r\n                              message: \"Wprowadź nowy adres email\",\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                          <Button\r\n                            type=\"default\"\r\n                            shape=\"round\"\r\n                            htmlType=\"submit\"\r\n                          >\r\n                            Zmień Email\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                  <Divider>Zmiana Numeru Telefonu</Divider>\r\n                  <Row\r\n                    justify=\"center\"\r\n                    align=\"middle\"\r\n                    style={{ paddingLeft: 30 }}\r\n                  >\r\n                    <Col span={12}>\r\n                      <Form\r\n                        {...layout}\r\n                        name=\"changePhone\"\r\n                        initialValues={{ phone: phone.slice(3) }}\r\n                        onFinish={changePhone}\r\n                      >\r\n                        <Form.Item\r\n                          label=\"Numer Telefonu\"\r\n                          name=\"phone\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"Wprowadź nowy numer telefonu\",\r\n                            },\r\n                            {\r\n                              min: 9,\r\n                              message:\r\n                                \"Numer Telefonu powinien mieć co najmniej 9 cyfr\",\r\n                            },\r\n                            {\r\n                              max: 9,\r\n                              message:\r\n                                \"Numer Telefonu powinien mieć maksymalnie 9 cyfr\",\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input prefix={\"+48\"} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                          <Button\r\n                            type=\"default\"\r\n                            shape=\"round\"\r\n                            htmlType=\"submit\"\r\n                          >\r\n                            Zmień Numer\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                  <Divider>Zmiana Hasła</Divider>\r\n                  <Row\r\n                    justify=\"center\"\r\n                    align=\"middle\"\r\n                    style={{ paddingLeft: 30 }}\r\n                  >\r\n                    <Col span={12}>\r\n                      <Form\r\n                        {...layout}\r\n                        name=\"changePassword\"\r\n                        onFinish={changePassword}\r\n                      >\r\n                        <Form.Item\r\n                          name=\"oldPassword\"\r\n                          label=\"Stare Hasło\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"Wprowadź stare Hasło\",\r\n                            },\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                          name=\"newPassword\"\r\n                          label=\"Nowe Hasło\"\r\n                          dependencies={[\"oldPassword\"]}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"Wprowadź nowe Hasło\",\r\n                            },\r\n                            {\r\n                              min: 8,\r\n                              message: \"Hasło musi mieć co najmniej 8 znaków\",\r\n                            },\r\n\r\n                            ({ getFieldValue }) => ({\r\n                              validator(rule, value) {\r\n                                if (\r\n                                  !value ||\r\n                                  getFieldValue(\"oldPassword\") !== value\r\n                                ) {\r\n                                  return Promise.resolve();\r\n                                }\r\n                                return Promise.reject(\r\n                                  \"Nowe Hasło jest takie same jak Stare Hasło\"\r\n                                );\r\n                              },\r\n                            }),\r\n                          ]}\r\n                          hasFeedback\r\n                        >\r\n                          <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                          name=\"confirmPassword\"\r\n                          label=\"Potwierdź Nowe Hasło\"\r\n                          dependencies={[\"newPassword\"]}\r\n                          hasFeedback\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"Potwierdź swoje nowe hasło\",\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                              validator(rule, value) {\r\n                                if (\r\n                                  !value ||\r\n                                  getFieldValue(\"newPassword\") === value\r\n                                ) {\r\n                                  return Promise.resolve();\r\n                                }\r\n                                return Promise.reject(\r\n                                  \"Wprowadzone hasła nie są z sobą zgodne\"\r\n                                );\r\n                              },\r\n                            }),\r\n                          ]}\r\n                        >\r\n                          <Input.Password />\r\n                        </Form.Item>\r\n                        <Form.Item {...tailLayout}>\r\n                          <Button\r\n                            type=\"default\"\r\n                            shape=\"round\"\r\n                            htmlType=\"submit\"\r\n                          >\r\n                            Zmień Hasło\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                  <Divider>Usuwanie Konta</Divider>\r\n                  <Row\r\n                    justify=\"center\"\r\n                    align=\"middle\"\r\n                    style={{ paddingLeft: 30 }}\r\n                  >\r\n                    <Col span={12}>\r\n                      <Button\r\n                        type=\"default\"\r\n                        shape=\"round\"\r\n                        onClick={showModal}\r\n                        danger\r\n                      >\r\n                        Usuń Konto\r\n                      </Button>\r\n                      <Modal\r\n                        title=\"Usuwanie Konta\"\r\n                        visible={visible}\r\n                        onOk={removeAccount}\r\n                        confirmLoading={loading}\r\n                        onCancel={hideModal}\r\n                      >\r\n                        <p>Czy napewno chcesz usunąć swoje konto ?</p>\r\n                      </Modal>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Content>\r\n          </AccountCard>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n\r\nconst AccountCard = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  text-align: center;\r\n  border-radius: 25px;\r\n  background-color: #f7f9fb;\r\n  border: 1px solid #e9eff8;\r\n  box-shadow: 0 0 3px rgba(33, 33, 33, 0.2);\r\n`;\r\n","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\common\\protectedRouteAdmin.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Manage.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\Recovery.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\reducer.js",["151"],"import { combineReducers } from \"redux\";\r\nimport userReducer from \"./user\";\r\nimport messageReducer from \"./message\";\r\nimport allegroReducer from \"./allegro\";\r\nimport monitorReducer from \"./monitor\";\r\nimport adminReducer from \"./admin\";\r\nimport ebayRedicers from \"./ebay\";\r\n\r\nconst appReducers = combineReducers({\r\n  users: userReducer,\r\n  messages: messageReducer,\r\n  allegro: allegroReducer,\r\n  ebay: ebayRedicers,\r\n  monitor: monitorReducer,\r\n  admin: adminReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type == \"userLogout\") {\r\n    state = undefined;\r\n  }\r\n  return appReducers(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\admin\\Admin.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\middleware\\logger.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\middleware\\api.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\message.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\allegro.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\MonitorHistory.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\api.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\monitor.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\ManageMonitor.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\admin.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\services\\userServices.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\ExpandedTableAdmin.js",[],["152","153"],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\services\\httpService.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\MonitorsHistory.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\components\\MonitorsHistoryItem.js",[],"C:\\Users\\kryst\\Desktop\\Projekt\\marketapp\\src\\store\\ebay.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":5,"column":58,"nodeType":"160","messageId":"161","endLine":5,"endColumn":65},{"ruleId":"158","severity":1,"message":"162","line":16,"column":3,"nodeType":"160","messageId":"161","endLine":16,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":38,"column":27,"nodeType":"165","messageId":"166","endLine":38,"endColumn":29},{"ruleId":"167","severity":1,"message":"168","line":68,"column":6,"nodeType":"169","endLine":68,"endColumn":14,"suggestions":"170"},{"ruleId":"158","severity":1,"message":"171","line":17,"column":10,"nodeType":"160","messageId":"161","endLine":17,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":19,"column":19,"nodeType":"165","messageId":"166","endLine":19,"endColumn":21},{"ruleId":"154","replacedBy":"172"},{"ruleId":"156","replacedBy":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'message' is defined but never used.","Identifier","unusedVar","'loadEbayUserData' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["176"],"'logoutUser' is defined but never used.",["174"],["175"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},"Update the dependencies array to be: [dispatch, loaded]",{"range":"179","text":"180"},[2030,2038],"[dispatch, loaded]"]